services:
  devcontainer:
    image: mcr.microsoft.com/devcontainers/python:3.11
    container_name: devcontainer
    restart: unless-stopped
    volumes:
      - ..:/workspaces/weather-kafka:cached
      - ~/.gitconfig:/home/vscode/.gitconfig:ro
    command: sleep infinity
    networks:
      - kafka-network
      - db-network
    user: vscode
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
  kafka:
    image: bitnami/kafka:latest
    restart: unless-stopped
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_KRAFT_CLUSTER_ID=94BF3540EA68425BAC359B1DE513993C # This id should be unique for each cluster

    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - kafka-network
  mysql:
    image: mysql:latest
    restart: unless-stopped
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=weather
      - MYSQL_USER=user
      - MYSQL_PASSWORD=${mysql_pass}
      - MYSQL_ROOT_PASSWORD=${mysql_pass}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - db-network
  producer:
    build:
      context: .
      dockerfile: producer/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - kafka-network
  consumer:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - kafka-network
      - db-network

networks:
  kafka-network:
    driver: bridge
  db-network:
    driver: bridge

volumes:
  mysql_data:
